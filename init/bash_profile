#	
#	EDITOR=vi
#	export EDITOR
#	

#	Default
#PS1=\h:\W \u\$
PS1='\[\e[1;1m\][\u@\h \w]\$\[\e[0m\] '

#	sudo port install bedtools boost bowtie cmake coreutils curl ds9 gnupg gnuplot gnutar gnutls gzip lftp mariadb mariadb-server parallel pstree python27 py27-pip R samtools unzip util-linux wget wput bash vim git gawk qt4-mac qt5 ruby20 ruby21 ruby22 ruby23 apache2 postgresql95\* gcc49 gcc5 jq gmake ds9 p7zip ispell
#
#	ds9 IS NOT command line anymore. It is now a GUI app in /Applications/MacPorts/.
#		It can be opened via command line, but always creates the GUI interface.
#		/Applications/MacPorts/SAOImage\ DS9.app/Contents/MacOS/ds9
#	gdl IS NOT Gnu Data Language (there is no port for that)

#	python / pip
#		sudo port install python27 py27-pip
#		sudo port select python python27
#		sudo port select pip pip27
#		cd ~; ln -s Library/Python/2.7/ .python
#		pip install --user awscli
#		pip install --user deepTools
#
#		pip install --user --upgrade awscli deeptools grip pip

#	mariadb
#		sudo port install mariadb mariadb-server
#		sudo port select mysql mariadb
#		sudo /opt/local/share/mariadb/support-files/mysql.server start

#	apache
#		sudo port install apache2
#		sudo /opt/local/apache2/bin/apachectl start

#	postgresql
#		sudo port install postgresql95\*
#		sudo port select postgresql postgresql95
#		sudo mkdir -p /opt/local/var/db/postgresql95/defaultdb
#		sudo chown postgres:postgres /opt/local/var/db/postgresql95/defaultdb
#		sudo chown postgres:postgres /opt/local/var/db/postgresql95
#		sudo su postgres -c '/opt/local/lib/postgresql95/bin/initdb -D /opt/local/var/db/postgresql95/defaultdb'
#
#		sudo su postgres -c '/opt/local/lib/postgresql95/bin/pg_ctl -D /opt/local/var/db/postgresql95/defaultdb -l /opt/local/var/db/postgresql95/logfile start'
#
#		sudo su postgres -c 'createdb jakewendt; createuser --superuser jakewendt;'
#		psql

#	Install kent utils (sadly not very configurable)
#		git clone git://github.com/ENCODE-DCC/kentUtils.git
#		cd kentUtils
#		make
#		rename kentUtils .kentUtils ~/kentUtils


#	Install blat (sadly not very configurable)
#		http://hgwdev.cse.ucsc.edu/~kent/src/	<--- newer version 36
#		https://users.soe.ucsc.edu/~kent/src/
#		wget http://hgwdev.cse.ucsc.edu/~kent/src/blatSrc36.zip
#		unzip blatSrc36.zip
#		cd blatSrc
#		mkdir -p ~/.blat
#		BINDIR=$HOME/.blat make


#	Install trinity (tried with gcc49(4.9.3) and gcc5(5.3) with same failures)
#		git clone https://github.com/trinityrnaseq/trinityrnaseq.git
#		cd trinityrnaseq
#		sed -i.original 's/LIBPATH=-ltinfo//' trinity-plugins/Makefile
#		make
#		make plugins
#		rename trinityrnaseq .trinity ~/trinityrnaseq


#	Install bowtie2
#		http://iweb.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.2.7/bowtie2-2.2.7-macos-x86_64.zip
#		http://iweb.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.2.7/bowtie2-2.2.7-source.zip
#
#		wget http://iweb.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.2.7/bowtie2-2.2.7-source.zip	
#		unzip bowtie2-2.2.7-source.zip 
#		cd bowtie2-2.2.7
#		sed -i.orig 's;/usr/local;$(HOME)/.local;' Makefile
#		make
#		make install



#	Install Homebrew in custom location
#		ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install | sed 's;/usr/local;/homebrew;')"
#


export GEM_HOME="${HOME}/.gem/ruby/2.3"
export GEM_PATH=$GEM_HOME

export PATH=${HOME}/.local/bin:${GEM_HOME}/bin:${HOME}/.python/bin:${HOME}/.kentUtils/bin:${HOME}/.blat:${HOME}/.trinity:${HOME}/.blast/bin:/opt/local/libexec/gnubin:/opt/local/bin:/opt/local/sbin:/homebrew/bin:${PATH}

#	Use gnu utils by default ...
#	 /opt/local/libexec/gnubin/


#	Functions can be declared with a "function" prefix or "()" suffix or both, but not neither.

#
#	Change this alias to create a tmpfile, run it, then delete it
#
#alias port_update="sudo port -F ~/port_update.port"
#    selfupdate
#    upgrade outdated
#    uninstall inactive
#    clean --all installed
function port_update {
	date=`date "+%Y%m%d%H%M%S"`
	echo -e "selfupdate\noutdated\nupgrade outdated
		uninstall inactive\nclean --all installed" > /tmp/port_update.$date
	sudo port -F /tmp/port_update.$date
	#	\rm /tmp/port_update.$date
}

#	Put /opt/local/libexec/gnubin in PATH so these 3 aliases aren't needed.
#alias du=gdu
#alias awk=gawk
#alias readlink=greadlink

alias gzip="gzip --best"
alias grep="grep -is"
alias ..="cd .."
alias cd..="cd .."
alias la="\ls -al --color=auto"
alias ll="\ls -lG --color=auto"
alias ln="ln -s"
alias more="less"
alias rm="rm -i"
alias h=history
alias c="for i in {1..50}; do echo; done"
alias psme="ps -fU $USER"

alias awsq="mysql_queue.bash --defaults_file ~/.awsqueue.cnf"
alias awsdb="mysql --defaults-file=~/.awsqueue.cnf"

#	"Better" done in .inputrc
#set -o vi

function relink {
	rm $1
	ln -s $2 $1
}

#	I've only ever had this successfully work with kentUtils for "mysqlclient"!
#	The value of LIBRARY_PATH is a colon-separated list of directories, much like PATH. When configured as a native compiler, GCC tries the directories thus specified when searching for special linker files, if it can't find them using GCC_EXEC_PREFIX. Linking using GCC also uses these directories when searching for ordinary libraries for the -l option (but directories specified with -L come first).
export LIBRARY_PATH="/opt/local/lib/mariadb/mysql/"


#	I think that these 4 were/are solely for "dap", the SAS-like software
export DAPPP="/opt/local/bin/dappp"
export DAPRUNS="/opt/local/bin/dapruns"
export INCDIR="/opt/local/include"
export LIBDIR="/opt/local/lib"

#	for whatever reason, qt4-mac doesn't install qmake in the standard bin
#export PATH=/opt/local/libexec/qt4/bin:${PATH}
#	for whatever reason, qt5 doesn't install qmake in the standard bin
#export PATH=/opt/local/libexec/qt5/bin:${PATH}
export PATH=${PATH}:/opt/local/libexec/qt5/bin


#	-r Read the current history file and append its contents to the history list.
#	(without using the -r, the history of the new shell will only show those manually added to it.)
history -r
#	-s The args are added to the end of the history list as a single entry.
history -s 'brew update && brew upgrade'
history -s gem update
history -s port_update
history -s pip install --user --upgrade awscli deeptools grip pip
history -s sudo su postgres -c \'/opt/local/lib/postgresql95/bin/pg_ctl -D /opt/local/var/db/postgresql95/defaultdb -l /opt/local/var/db/postgresql95/logfile start\'
history -s sudo /opt/local/share/mariadb/support-files/mysql.server start
history -s sudo /opt/local/apache2/bin/apachectl start


